<?php$appnum = 10 ;$appname = "" ;function analyze_read($read){	if(empty($read))		return false ;	$command = array() ;	$argument = preg_split("/[\s\t]/",$read) ;	for($i=0;$i<count($argument);$i++)	{		$temp = $argument[$i] ;		$temp = trim($temp) ;		if($temp != "")		{			//$temp = strtolower($temp) ;			array_push($command,$temp) ;		}	}	return $command ;}function showHelp(){	echo iconv('UTF-8','GBK',"clean alldata		清理所有内存数据，包括KVDB，memcache，Counter，Rank中的数据")."\n\n" ;	echo iconv('UTF-8','GBK',"clean all memcache	清楚所有应用中的memcache的数据")."\n\n" ;	echo iconv('UTF-8','GBK',"clean all kvdb		清楚所有应用中的KVDB的数据\n\n") ;	echo iconv('UTF-8','GBK',"clean all counter	清楚所有应用中的Counter的数据\n\n") ;	echo iconv('UTF-8','GBK',"clean all rank		清楚所有应用中的Rank的数据\n\n") ;	echo iconv('UTF-8','GBK',"use appname		选择要处理那个appname的数据\n\n") ;	echo iconv('UTF-8','GBK',"clean all		清除一个应用中所有在内存中的数据，包括KVDB，memcache，Counter，Rank中的数据，使用前应先使用use 命令来选择一个应用\n\n") ;	echo iconv('UTF-8','GBK',"clean memcache		清楚一个应用中的memcache的数据,使用前应先使用use 命令来选择一个应用\n\n") ;	echo iconv('UTF-8','GBK',"clean kvdb		清楚一个应用中的KVDB的数据，使用前应先使用use 命令来选择一个应用\n\n") ;	echo iconv('UTF-8','GBK',"clean counter		清楚一个应用中的Counter的数据，使用前应先使用use 命令来选择一个应用\n\n") ;	echo iconv('UTF-8','GBK',"clean rank		清楚一个应用中的Rank的数据，使用前应先使用use 命令来选择一个应用\n\n") ;	echo iconv('UTF-8','GBK',"showapp			显示当前选中的appname，使用前应先使用use 命令来选择一个应用\n\n") ;	echo iconv('UTF-8','GBK',"showapps		显示当前所有的应用名称\n\n") ;	echo iconv('UTF-8','GBK',"quit			退出数据清理环境\n\n") ;	echo iconv('UTF-8','GBK',"exit			退出数据清理环境\n\n") ;	echo iconv('UTF-8','GBK',"help			显示帮助信息\n\n") ;	echo iconv('UTF-8','GBK',"\nSAE >") ;}function delete_Memcache($appname,$redis,$appnum){	$redis->select($appnum) ;	$num = $redis->hGet('app-num',$appname) ;	if($num === false)		return false ;	$redis->select($num) ;	$redis->del('memcache','arrmemchche') ;	return true ;}function delete_All_Memcache($redis,$appnum){	$redis->select($appnum) ;	$memcaches = $redis->hKeys('app-num') ;	if($memcaches === false)		return false ;	foreach($memcaches as $value)	{		$ret = delete_Memcache($value,$redis,$appnum) ;		if($ret === false)			return false ;	}	return true ;}function delete_Counter($appname,$redis,$appnum){	$redis->select($appnum) ;	$num = $redis->hGet('app-num',$appname) ;	if($num === false)		return false ;	$redis->select($num) ;	$redis->del('counter') ;	return true ;}function delete_All_Counter($redis,$appnum){	$redis->select($appnum) ;	$appnames = $redis->hKeys('app-num') ;	if($appnames === false)		return false ;	foreach($appnames as $value)	{		$ret = delete_Counter($value,$redis,$appnum) ;		if($ret === false)			return false ;	}	return true ;}function delete_KVDB($appname,$redis,$appnum){	$redis->select($appnum) ;	$num = $redis->hGet('app-num',$appname) ;	if($num === false)		return false ;	$redis->select($num) ;	$allredis = $redis->Keys('kvdb*') ;	if(!is_array($allredis))		return false ;	foreach($allredis as $value)	{		$redis->del($value) ;	}	return true ;}function delete_All_KVDB($redis,$appnum){	$redis->select($appnum) ;	$appnames = $redis->hKeys('app-num') ;	if($appnames === false)		return false ;	foreach($appnames as $value)	{		$ret = delete_KVDB($value,$redis,$appnum) ;		if($ret === false)			return false ;	}	return true ;}function delete_Rank($appname,$redis,$appnum){	$redis->select($appnum) ;	$num = $redis->hGet('app-num',$appname) ;	if($num === false)		return false ;	$redis->select($num) ;	$rank = $redis->Keys('rank*') ;	if(!is_array($rank))		return false ;	foreach($rank as $value)	{		$redis->del($value) ;	}	return true ;}function delete_All_Rank($redis,$appnum){	$redis->select($appnum) ;	$appnames = $redis->hKeys('app-num') ;	if($appnames === false)		return false ;	foreach($appnames as $value)	{		$ret = delete_Rank($value,$redis,$appnum) ;		if($ret === false)			return false ;	}	return true ;}function delete_All($appname,$redis,$appnum){	if(delete_Memcache($appname,$redis,$appnum) === false)		return false ;	if(delete_Counter($appname,$redis,$appnum) === false)		return false ;	if(delete_KVDB($appname,$redis,$appnum) === false)		return false ;	if(delete_Rank($appname,$redis,$appnum) === false)		return false ;	return true ;}function flush_All($redis,$appnum){	$redis->select($appnum) ;	$appnames = $redis->hGetAll('app-num') ;	if($appnames === false)		return false ;	foreach($appnames as $key=>$value)	{		$ret = delete_All($key,$redis,$appnum) ;		if($ret === false)		{			return false ;		}	}	return true ;}$redis = new Redis() ;$listred = $redis->connect('127.0.0.1',6379) ;while(!$redis){	echo iconv('UTF-8','GBK','redis 连接错误，正在尝试从新连接。').PHP_EOL ;	sleep(2) ;	$redis =  new Redis() ;}echo "\nSAE> " ;$stdin = fopen("php://stdin", "rb");while ($read = fread($stdin, 1024)){		$command = array() ;	$read = trim($read) ;	if($read == "")		echo iconv('UTF-8','GBK',"\nSAE> ") ;	else	{		$command = analyze_read($read) ;				switch(strtolower($command[0]))		{		case "exit":		case "quit":			$redis->close() ;			exit("bye\n") ;			break ;		case "help":			showHelp() ;			break ;		case "clean":			if(count($command) === 2)			{					switch(strtolower($command[1]))				{				case "all":					if($appname == "")					{						echo iconv('UTF-8','GBK',"请您先选择一个appname来进行操作\n\nSAE> ") ;						break ;					}					else if(delete_All($appname,$redis,$appnum))						echo iconv('UTF-8','GBK',"ok\n\nSAE> ") ;					else						echo iconv('UTF-8','GBK',"清除失败，请重试\n\nSAE> ") ;					break ;				case "alldata":					if(flush_All($redis,$appnum))						echo iconv('UTF-8','GBK',"ok\n\nSAE> ") ;					else						echo iconv('UTF-8','GBK',"清除失败，请重试\n\nSAE> ") ;					break ;				case "memcache":					if($appname == "")					{						echo iconv('UTF-8','GBK',"请您先选择一个appname来进行操作\n\nSAE> ") ;						break ;					}					if(delete_Memcache($appname,$redis,$appnum))						echo iconv('UTF-8','GBK',"ok\n\nSAE> ") ;					else						echo iconv('UTF-8','GBK',"清除失败，请重试\n\nSAE> ") ;					break ;				case "kvdb":					if($appname == "")					{						echo iconv('UTF-8','GBK',"请您先选择一个appname来进行操作\n\nSAE> ") ;						break ;					}					if(delete_KVDB($appname,$redis,$appnum))						echo iconv('UTF-8','GBK',"ok\n\nSAE> ") ;					else						echo iconv('UTF-8','GBK',"清除失败，请重试\n\nSAE> ") ;					break ;				case "counter":					if($appname == "")					{						echo iconv('UTF-8','GBK',"请您先选择一个appname来进行操作\n\nSAE> ") ;						break ;					}					if(delete_Counter($appname,$redis,$appnum))						echo iconv('UTF-8','GBK',"ok\n\nSAE> ") ;					else						echo iconv('UTF-8','GBK',"清除失败，请重试\n\nSAE> ") ;					break ;				case "rank":					if($appname == "")					{						echo iconv('UTF-8','GBK',"请您先选择一个appname来进行操作\n\nSAE> ") ;						break ;					}					if(delete_Rank($appname,$redis,$appnum))						echo iconv('UTF-8','GBK',"ok\n\nSAE> ") ;					else						echo iconv('UTF-8','GBK',"清除失败，请重试\n\nSAE> ") ;					break ;				default:					echo iconv('UTF-8','GBK',"您输入的参数有误，请重新输入.\n\nSAE> ") ;				}			}			else if(count($command) === 3)			{				if(strtolower($command[1]) == 'all')				{					switch($command[2])					{					case "memcache" :						if(delete_All_Memcache($redis,$appnum))							echo iconv('UTF-8','GBK',"ok\n\nSAE> ") ;						else							echo iconv('UTF-8','GBK',"清除失败，请重试\n\nSAE> ") ;						break ;					case "kvdb" :						if(delete_All_KVDB($redis,$appnum))							echo iconv('UTF-8','GBK',"ok\n\nSAE> ") ;						else							echo iconv('UTF-8','GBK',"清除失败，请重试\n\nSAE> ") ;						break ;					case "counter" :						if(delete_All_Counter($redis,$appnum))							echo iconv('UTF-8','GBK',"ok\n\nSAE> ") ;						else							echo iconv('UTF-8','GBK',"清除失败，请重试\n\nSAE> ") ;						break ;					case "rank" :						if(delete_All_Rank($redis,$appnum))							echo iconv('UTF-8','GBK',"ok\n\nSAE> ") ;						else							echo iconv('UTF-8','GBK',"清除失败，请重试\n\nSAE> ") ;						break ;					default:						echo iconv('UTF-8','GBK',"您输入的参数有误，请重新输入.\n\nSAE> ") ;						break ;					}				}				else					echo iconv('UTF-8','GBK',"您输入的参数有误，请重新输入.\n\nSAE> ") ;			}			else			{				echo iconv('UTF-8','GBK',"您输入的参数有误，请重新输入.\n\nSAE> ") ;			}			break ;		case "use":			if(count($command) !== 2)				echo iconv('UTF-8','GBK',"use 只接收一个参数，请检查您的输入.\n\nSAE> ") ;			else			{				$redis->select($appnum) ;				if($redis->hExists("app-num",$command[1]))				{					$appname = $command[1] ;					echo "\nSAE> " ;				}				else					echo iconv('UTF-8','GBK',"您输入的应用名称不存在.\n\nSAE> ") ;			}			break ;		case "showapp":			if($appname == "")				echo iconv('UTF-8','GBK',"您还没有选应用，请您使用use命令来寻找一个应用\n\nSAE> ") ;			else				echo $appname."\n\nSAE> " ;			break ;		case "showapps" :			$redis->select($appnum) ;			$apps = $redis->hGetAll("app-num") ;			foreach($apps as $key => $value)			{				echo $value."    ".$key."\n" ;			}			echo "\nSAE> " ;			break ;		default:			echo iconv('UTF-8','GBK',"您输入的命令有误，请重新输入.\n\nSAE> ") ;			break ;		}	}}?>